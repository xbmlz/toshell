package org.viodo.toshell.ui.form;

import cn.hutool.core.util.RandomUtil;
import com.formdev.flatlaf.extras.FlatSVGIcon;
import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import lombok.Getter;

import javax.swing.*;
import java.awt.*;
import java.awt.event.MouseEvent;
import java.util.function.BiConsumer;

import static com.formdev.flatlaf.FlatClientProperties.*;

/**
 * session form
 *
 * @author chenxc
 */
@Getter
public class SessionForm {
    private JPanel mainPanel;
    private JTabbedPane mainTab;
    private JSplitPane lrSplitPane;
    private JSplitPane tbSplitPane;

    private static SessionForm instance;

    public static SessionForm getInstance() {
        if (instance == null) {
            instance = new SessionForm();
        }
        return instance;
    }

    public SessionForm() {
        initTab();
    }

    private void initTab() {
        JToolBar leading = new JToolBar();
        leading.setFloatable(false);
        leading.setBorder(null);
        leading.add(new JButton(new FlatSVGIcon("icons/project.svg")));

        JToolBar trailing = new JToolBar();
        trailing.setFloatable(false);
        trailing.setBorder(null);
        JButton addBtn = new JButton(new FlatSVGIcon("icons/add.svg"));
        // TODO add session
        addBtn.addActionListener(e -> {
            mainTab.addTab(RandomUtil.randomString(5), new JPanel());
        });

//        trailing.add(addBtn);

        mainTab.putClientProperty(TABBED_PANE_TAB_CLOSABLE, true);
        mainTab.putClientProperty(TABBED_PANE_TAB_CLOSE_TOOLTIPTEXT, "Close");
        mainTab.putClientProperty(TABBED_PANE_TAB_CLOSE_CALLBACK,
                (BiConsumer<JTabbedPane, Integer>) (tabPane, tabIndex) -> {
                    AWTEvent e = EventQueue.getCurrentEvent();
                    int modifiers = (e instanceof MouseEvent) ? ((MouseEvent) e).getModifiers() : 0;
                    JOptionPane.showMessageDialog(this.$$$getRootComponent$$$(), "Closed tab '" + tabPane.getTitleAt(tabIndex) + "'."
                                    + "\n\n(modifiers: " + MouseEvent.getMouseModifiersText(modifiers) + ")",
                            "Tab Closed", JOptionPane.PLAIN_MESSAGE);
                });

        mainTab.putClientProperty(TABBED_PANE_TRAILING_COMPONENT, trailing);

        mainTab.setTabLayoutPolicy(JTabbedPane.SCROLL_TAB_LAYOUT);

        if (mainTab.getTabCount() == 0) {
            mainTab.addTab("All Session", SessionManager.getInstance().getMainPanel());
        }
    }


    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        mainPanel = new JPanel();
        mainPanel.setLayout(new GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        mainPanel.setBackground(new Color(-1));
        mainTab = new JTabbedPane();
        mainPanel.add(mainTab, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, new Dimension(200, 200), null, 0, false));
        lrSplitPane = new JSplitPane();
        mainTab.addTab("Untitled", lrSplitPane);
        tbSplitPane = new JSplitPane();
        tbSplitPane.setOrientation(0);
        lrSplitPane.setLeftComponent(tbSplitPane);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return mainPanel;
    }

}
